# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# Publishing package distribution releases using GitHub Actions CI/CD workflows
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish Python Package

on:
  push:
  release:
    types: [ published ]

jobs:
  build:
    name: Build a distribution package
    # https://github.com/actions/runner-images?tab=readme-ov-file#available-images
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user build
      - name: Build package
        # https://build.pypa.io/
        run: python -m build
      # https://github.com/marketplace/actions/upload-a-build-artifact
      - uses: actions/upload-artifact@v4
        with:
          path: dist/
          if-no-files-found: error

  publish-to-test-pypi:
    name: Publish to Test PyPI
    needs:
      - build
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://test.pypi.org/project/curedcolumns/
    permissions:
      id-token: write
    steps:
      - name: Get distributable files
        uses: actions/download-artifact@v4
        with:
          path: dist/
      - name: Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    # Only publish on tag pushes (releases)
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://pypi.org/project/curedcolumns/
    permissions:
      id-token: write
    steps:
      - name: Get distributable files
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
